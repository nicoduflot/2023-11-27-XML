<!-- 
    L'espace de nom donne un contexte à un terme, par exemple certains mots ont plusieurs définitions, 
    c'est le contexte dans lequel on utilise ce mot qui donne sa "fonction / définition" finale

    On peut par exemple associer le document à l’espace de nom XHTML et par soucis de praticité 
    on va utiliser le préfixe html (faciliter la lecture humaine du document) 
    car il faut savoir qu’à la base le choix du préfixe est totalement arbitraire.
-->

<html:html xmlns:html="http://www.w3.org/1999/xhtml">
    <html:head>

    </html:head>
    <html:body>
        <!-- du contenu html -->
    </html:body>
</html:html>

<!-- 
    on a vu qu'il était possible de déclarer plusieurs espaces de noms pour un même document
-->

<html:html xmlns:html="http://www.w3.org/1999/xhtml" 
    xmlns:mml="http://www.w3.org/1998/Math/MathML">
    <html:head>
        <html:title>Les espaces de noms</html:title>
    </html:head>
    <html:body>
        <!-- du contenu html -->
        <mml:math>
            <mml:apply>
                <mml:eq>
                    <!-- l'équation en question -->
                </mml:eq>
            </mml:apply>
        </mml:math>
    </html:body>
</html:html>

<!-- 
    on peut limiter la portée de la déclaration d'un espace de nom, 
    pour la déclaration multiple, 
    il est possible aussi de n'utilisier ( d'appeler ) un espace de nom seulement quand il est requis
-->
<!-- ici, on utilise le dialecte HTML -->
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Les espaces de noms</title>
    </head>
    <body>
        <!-- du contenu html -->
        <!-- à partir de cette balise, elle et tout ce qu'elle contyient utilise le dialect math -->
        <math xmlns="http://www.w3.org/1998/Math/MathML">
            <apply>
                <eq>
                    <!-- l'équation en question -->
                </eq>
            </apply>
        </math>
        <!-- on est "sorti" de la portée du vocabulaire math, on reviens dans le vocabulaire html -->
    </body>
</html>

<!-- 
    Mais comment faire si les balises que je doit utiliser à l'intérieur du vocabulaire HTML n'ont pas de namespace ?
    il est en fait possible "d'annuler" un namespace de la même façon que l'on a appelé math dans un contexte html
-->

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>Les espaces de noms</title>
    </head>
    <body>
        <!-- du contenu html -->
        <!-- à partir de cette balise, on écrit notre propre dialecte, sans vocabulaire référent -->
        <personnage xmlns="">
            <nom>Lagaffe</nom>
            <prenom>Gaston</prenom>
        </personnage>
        <!-- on est "sorti" de la portée du "pas de vocabulaire", on reviens dans le vocabulaire html -->
    </body>
</html>

<!-- 
XML
    http://www.w3.org/XML/1998/namespace 
XInclude
    http://www.w3.org/2001/XInclude 
XLink
    http://www.w3.org/1999/xlink 
MathML
    http://www.w3.org/1998/Math/MathML 
XHTML
    http://www.w3.org/1999/xhtml 
SVG
    http://www.w3.org/2000/svg 
Schémas
    http://www.w3.org/2001/XMLSchema 
Instances de schémas
    http://www.w3.org/2001/XMLSchema-instance 
Schematron
    http://purl.oclc.org/dsdl/schematron 
XSLT
    http://www.w3.org/1999/XSL/Transform 
XSL-FO
    http://www.w3.org/1999/XSL/Format 
DocBook
    https://tdg.docbook.org/tdg/5.1/ 
Dublin Core
    https://www.dublincore.org/specifications/dublin-core/dcmi-terms/ 


-->

<!-- 
    Les DTD : Document Type Definition

    Fichiers de définition permettant de définir une structure stricte aux documents XML

    Ce sont des règles qui permettent de définir la façon dont le document doit être écrit, 
    si des balisesdoivent absolument être présentes ou imposer le type d'un donnée.

    Quand un xml est soumis à des DTD, il faut vérifier qu'il est valide => conforme aux DTD

    Les DTDT imposent donc des normes d'écritures, utiles quand un document est écrit par 
    plusieurs personnes et pour pouvoir comprendre comment l'exploiter.

-->

<!-- DTD -->

<!-- Balise contenant une autre balise -->
<contact>
    <nom>Durand</nom>
</contact>
<!--  pour contact -->
<!ELEMENT contact (nom)>

<!-- pour nom -->
<!ELEMENT nom (#PCDATA)>

<!-- si la balise nom est vide -->
<!ELEMENT nom EMPTY>
<element /> ou <element></element>

<!-- si la balise peut être vide ou remplie -->
<!ELEMENT nom ANY>

<element></element>
<!-- ou -->
<element><balise /></element>
<!-- ou -->
<element>texte</element>
<!-- ou -->
<element>texte<balise /></element>
<!-- ou -->
<element><balise />texte</element>

<contact>
    <nom>Durand</nom>
    <prenom>Jacques</prenom>
    <age>49</age>
</contact>
<contact>
    <nom>ACME Inc.</nom>
    <prenom></prenom>
    <age></age>
</contact>

<!ELEMENT contact (nom, prenom, age)>
    <!ELEMENT nom (#PCDATA)>
    <!ELEMENT prenom (#PCDATA)>
    <!ELEMENT age (#PCDATA)>

<!-- ici, la balise contact DOIT avoir un e balise nom, prenom et age -->

Balise optionnelle
<!ELEMENT contact (nom, prenom?, age)>
<!-- ici, la balise contact DOIT avoir une balise nom et age, la balise prenom n'est pas obligatoire. -->

<!-- Balise optionnelle répétée -->

<adresses>
    <adresse />
    <adresse />
    <adresse />
</adresses>

<!ELEMENT adresses (adresse*)>

<!-- Balise obligatoire qui peut être répétée plusieurs fois -->
<emails>
    <email></email> <!-- au moins une balise email obligatoire -->
    <email></email> <!-- il peut y avoir plusieurs emails -->
</emails>

<!ELEMENT emails (email+)>

<contacts>
    <contact>
        <nom>Durand</nom>
        <prenom>Jacques</prenom>
        <prenom>Antoine</prenom>
        <age>49</age>
    </contact>
    <contact>
        <nom>ACME Inc.</nom>
    </contact>
</contacts>

<!ELEMENT contacts (contact*)>
    <!ELEMENT contact (nom, prenom*, age?)>
        <!ELEMENT nom (#PCDATA)>
        <!ELEMENT prenom (#PCDATA)>
        <!ELEMENT age (#PCDATA)>

<!-- les attributs des balises en DTD -->
<!ELEMENT balise (contenu)>
    <!ATTLIST balise attr>

<!-- attribut identifiant unique obligatoire -->
<contact numero="REF-001"></contact>

<!ELEMENT contact ANY>
    <!ATTLIST contact numero ID #REQUIRED>

<!-- 
    Propriété de présence des attributs
    forme               signification
    #IMPLIED            Attribut facultatif
    #REQUIRED           Attribut obligatoire
    #FIXED valeur       Attribut avec cette valeur, non modifiable
    "valeur"            Attribut avec cette valeur par défaut mais modifiable
-->

<!-- attribut qui fait référence à un attribut référence de valeur unique -->
<!-- je ne fait que les parties contact et adresses -->

<!ELEMENT contact ANY>
    <!ATTLIST contact personne (physique|morale) "physique">
    <!ATTLIST contact numero ID #REQUIRED>
<!ELEMENT adresse ANY>
    <!ATTLIST adresse type (facturation|livraison) "facturation">
    <!ATTLIST adresse personne IDREF #REQUIRED>


<annuaire>
    <contacts>
        <contact personne="physique" numero="REF-001" />
        <contact personne="morale" numero="REF-002" />
        <contact personne="physique" numero="REF-003" />
    </contacts>
    <adresses>
        <adresse type="facturation" personne="REF-001" />
        <adresse type="livraison" personne="REF-001" />
        <adresse type="livraison" personne="REF-001" />
        <adresse type="facturation" personne="REF-002" />
    </adresses>
</annuaire>

<!-- IDREFS = plusieurs éléménets font référence au même ID -->
<artiste name="Korn" artisteId="K-0001" />
<artiste name="Ice Cube" artisteId="IC-0002" />
<artiste name="Incubus" artisteId="I-0003" />
<artiste name="Limp Bizkit" artisteId="LB-0004" />
<album name="Follow the leader" albumArtisteId="K-0001" />
<album name="Family values tour" albumArtisteId="K-0001 IC-0002 I-0003 LB-0004" />

<!ELEMENT artiste EMPTY>
    <!ATTLIST artist name CDATA #REQUIRED>
    <!ATTLIST artist artisteId ID #REQUIRED>
<!ELEMENT album EMPTY>
    <!ATTLIST album name CDATA #REQUIRED>
    <!ATTLIST album albumArtisteId IDREFS #IMPLIED>


<!-- 
    La valeur d'un attribut est une constante 
    La valeur de cet attribut, si renseigné, doit être de la valeur indiquée
-->
<!ELEMENT prix (#PCDATA)>
    <!ATTLIST prix devise CDATA #FIXED "euro">

<!-- élément valide -->
<prix devise="euro">12</prix>
<!-- élément valide car par défaut on utilise euro -->
<prix>12</prix>
<!-- invalide car USD <=> euro -->
<prix devise="USD">12</prix>

<!-- 
    Les entités
    Se sont des alias qui permettent de réutiliser des informations dans le document xml OU dans les DTD
        - générales
        - paramètres
        - externes
-->

<!ENTITY dacia "Dacia">
<!ENTITY renault "Renault">
<!ENTITY citroen "Citroën">

<voiture>
    <marque>&dacia;</marque>
</voiture>
<voiture>
    <marque>&renault;</marque>
</voiture>
<voiture>
    <marque>&citroen;</marque>
</voiture>

<!-- le xml doit se comprendre de la façon suivante -->

<voiture>
    <marque>Dacia</marque>
</voiture>
<voiture>
    <marque>Renault</marque>
</voiture>
<voiture>
    <marque>Citroën</marque>
</voiture>

<!-- 
    Entité paramètre
    N'apparaît QUE DANS LES DTD
    Elles associent un alias à une partie de déclaration de DTD 
    (une partie qui est souvent ré-utilisée ou très longue et qui la lecture du DTD compliquée)
-->

<voiture marque="Dacia" />
<voiture marque="Renault" />
<voiture marque="Citroën" />

<!-- DTD classique pour l'attribut marque -->
<!ATTLIST voiture marque (Dacia|Renault|Citroën) #REQUIRED >

<!-- Avec l'entité paramètre -->
<!ENTITY % listeMarques "marque (Dacia|Renault|Citroën) #REQUIRED">
<!ATTLIST voiture %listeMarques>

<!-- autre exemple -->
<!ELEMENT contact (nom?, prenom?, login) >
<!ELEMENT personnage (nom?, prenom?, role) >

<!-- avec les entités paramètres -->
<!ENTITY % identite "nom?, prenom?">
<!ELEMENT contact (%identite, login) >
<!ELEMENT personnage (%identite, role) >

<!-- 
    Les entités externes
    Permettent de faire référence, comme les entités générales, à des information a utiliser dans le document xml,
    mais elles sont écritent dans un ficher externe
-->

<!-- déclaration des entités externe -->
<!ENTITY dacia SYSTEM "dacia.xml">
<!ENTITY renault SYSTEM "renault.xml">
<!ENTITY citroen SYSTEM "citroen.xml">

<!-- utilisation des entités externes dans le xml -->
<voiture>
    &dacia;
</voiture>
<voiture>
    &renault;
</voiture>
<voiture>
    &citroen;
</voiture>

<!-- dacia.xml -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE description [
    <!ELEMENT description (marque, modele, portes)>
        <!ELEMENT marque (#PCDATA)>
        <!ELEMENT modele (#PCDATA)>
        <!ELEMENT porte (#PCDATA)>
]>
<description>
    <marque>
        Dacia
    </marque>
    <modele>
        Sandero
    </modele>
    <portes>
        5
    </portes>
</description>